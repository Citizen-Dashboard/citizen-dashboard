apiVersion: apps/v1
kind: Deployment
metadata:
  name: citizen-dashboard-postgres
  labels:
    app.kubernetes.io/name: citizen-dashboard
    app.kubernetes.io/instance: citizen-dashboard
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: citizen-dashboard
      app.kubernetes.io/instance: citizen-dashboard
  template:
    metadata:
      labels:
        app.kubernetes.io/name: citizen-dashboard
        app.kubernetes.io/instance: citizen-dashboard
    spec:
      containers:
        - name: postgres
          image: "{{ .Values.images.postgres.repository }}:{{ .Values.images.postgres.tag }}"
          imagePullPolicy: {{ .Values.images.postgres.pullPolicy }}
          env:
            - name: POSTGRES_DB
              value: "{{ .Values.postgres.database }}"
            - name: POSTGRES_USER
              value: "{{ .Values.postgres.username }}"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: citizen-dashboard-secrets
                  key: postgres-password
          ports:
            - containerPort: {{ .Values.postgres.containerPort }}
          volumeMounts:
            - name: postgres-data
              mountPath: {{ .Values.postgres.persistence.mountPath }}
            - name: init-script
              mountPath: /docker-entrypoint-initdb.d/
      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: {{ include "citizen-dashboard.name" . }}-postgres-pvc
        - name: init-script
          configMap:
            name: citizen-dashboard-postgres-init
        - name: postgres-config
          configMap:
            name: citizen-dashboard-postgres-init
  resources:
    requests:
      memory: "1G"
      cpu: "1"
