images:
  dataFetcher:
    repository: ghcr.io/citizen-dashboard/data-fetcher
    tag: f07a88f1233d63bbe44d96f18e1a15e47c1e8ead          
    pullPolicy: IfNotPresent

  dataStore:
    repository: ghcr.io/citizen-dashboard/data-store
    tag: f07a88f1233d63bbe44d96f18e1a15e47c1e8ead          
    pullPolicy: IfNotPresent

  syncElastic:
    repository: ghcr.io/citizen-dashboard/sync-elastic
    tag: f07a88f1233d63bbe44d96f18e1a15e47c1e8ead
    pullPolicy: IfNotPresent

  searchApi:
    repository: ghcr.io/citizen-dashboard/search-api
    tag: f07a88f1233d63bbe44d96f18e1a15e47c1e8ead
    pullPolicy: IfNotPresent

  postgres:
    repository: postgres
    tag: 17.2
    pullPolicy: IfNotPresent

  pgadmin:
    repository: dpage/pgadmin4
    tag: latest
    pullPolicy: IfNotPresent

  elasticsearch:
    repository: docker.elastic.co/elasticsearch/elasticsearch
    tag: 8.10.2
    pullPolicy: IfNotPresent

imagePullSecrets:
  name: ghcr-secret

dataFetcher: 
  replicas: 1
  containerPort: 5000
  servicePort: 5000
  serviceType: ClusterIP

dataStore:
  schedule: "0 0 * * *"
  containerPort: 5000

syncElastic:
  replicas: 1
  containerPort: 5000
  servicePort: 5000
  serviceType: ClusterIP

searchApi:
  replicas: 1
  containerPort: 5000
  servicePort: 5000
  serviceType: ClusterIP

postgres:
  containerPort: 5432
  servicePort: 5432
  database: citizen_dashboard
  username: your_username
  persistence:
    enabled: true
    accessMode: ReadWriteOnce
    size: 1Gi
    mountPath: /var/lib/postgresql/data

pgadmin:
  containerPort: 8080
  servicePort: 8080
  serviceType: ClusterIP
  email: admin@example.com

elasticsearch:
  servicePort: 9200
  serviceType: ClusterIP
