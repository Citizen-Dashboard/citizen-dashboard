# .github/workflows/docker-publish.yml

name: Build and Publish Docker Images

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        component: [data_fetcher, data_store]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          # Using GITHUB_TOKEN by default; if using PAT, replace with:
          # password: ${{ secrets.GHCR_PAT }}

      - name: Set Image Tags
        id: set_tags
        run: |
          if [[ "${{ github.event_name }}" == "push" && ("${{ github.ref }}" == "refs/heads/main" || "${{ github.ref }}" == "refs/heads/master") ]]; then
            echo "TAGS=ghcr.io/${{ github.repository_owner }}/${{ matrix.component }}:latest ghcr.io/${{ github.repository_owner }}/${{ matrix.component }}:${{ github.sha }}" >> $GITHUB_ENV
          else
            echo "TAGS=ghcr.io/${{ github.repository_owner }}/${{ matrix.component }}:${{ github.sha }}" >> $GITHUB_ENV
          fi

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: services/${{ matrix.component }}
          push: true
          tags: ${{ env.TAGS }}
          # Enable build cache to speed up builds
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Verify Image Push
        run: |
          echo "Successfully pushed images for ${matrix.component} with tags: $TAGS"
