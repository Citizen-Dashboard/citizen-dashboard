
name: Citizen Dashboard main Github Actions
on:
  push:
    branches:
    - korabel/cloud_db
  pull_request:
    branches:
    - korabel/cloud_db

jobs:
  build-application:
    name: Build application and push image to dockerhub
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: .

    steps:
      - uses: actions/checkout@v2 

      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            data-fetcher:
              - 'services/data-fetcher/**'
            data-store:
              - 'services/data-store/**'  
            postgres:
              - 'services/postgres/**'
            kafka:
              - 'services/kafka/**'

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Set up Kubernetes context
        uses: azure/k8s-set-context@v3
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.K8S_CONFIG }}

## DATA FETCHER -----------------------------
      - name: Build and push Docker image (data-fetcher)
        if: steps.changes.outputs.data-fetcher == 'true'
        uses: docker/build-push-action@v3
        with:
            context: services/data-fetcher/.
            file: services/data-fetcher/Dockerfile
            push: true
            tags: |
              korabel/cd-data-fetcher:latest
              korabel/cd-data-fetcher:${{ github.sha }}
      
      - name: Deploy service to K8S (data-fetcher)
        if: steps.changes.outputs.data-fetcher == 'true'
        run: |
          kubectl apply -f services/data-fetcher/deployment/deployment.yaml
          kubectl rollout restart deployment data-fetcher -n default
          kubectl apply -f services/data-fetcher/deployment/service.yaml

## DATA STORE -----------------------------
      - name: Build and push Docker image (data-store)
        if: steps.changes.outputs.data-store == 'true'
        uses: docker/build-push-action@v3
        with:
            context: services/data-store/.
            file: services/data-store/Dockerfile
            push: true
            tags: |
              korabel/cd-data-store:latest
              korabel/cd-data-store:${{ github.sha }}

      - name: Deploy service to K8S (data-store)
        if: steps.changes.outputs.data-store == 'true'
        run: |
          kubectl apply -f services/data-store/deployment/deployment.yaml
          kubectl rollout restart deployment data-store -n default
          kubectl apply -f services/data-store/deployment/service.yaml

## KAFKA -----------------------------
      - name: Deploy service to K8S (kafka)
        if: steps.changes.outputs.kafka == 'true'
        run: |
          kubectl apply -f services/kafka/deployment/zookeeper.yaml
          kubectl apply -f services/kafka/deployment/kafka.yaml


## POSTGRES -----------------------------
      - name: Update postgres configMap values
        if: steps.changes.outputs.postgres == 'true'
        uses: fjogeleit/yaml-update-action@main
        with:
          valueFile: 'services/postgres/deployment/psql-configmap.yaml'
          commitChange: false
          changes: |
            {
              "data.POSTGRES_DB": "${{ secrets.POSTGRES_DB }}",
              "data.POSTGRES_USER": "${{ secrets.POSTGRES_USER }}",
              "data.POSTGRES_PASSWORD": "${{ secrets.POSTGRES_PASSWORD }}"
            }

      - name: Deploy service to K8S (postgres)
        if: steps.changes.outputs.postgres == 'true'
        run: |
          kubectl apply -f services/postgres/deployment/psql-configmap.yaml
          kubectl apply -f services/postgres/deployment/psql-pv.yaml
          kubectl apply -f services/postgres/deployment/psql-claim.yaml
          kubectl apply -f services/postgres/deployment/psql-main.yaml
          kubectl apply -f services/postgres/deployment/psql-service.yaml

      